<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="XxlJobLogMapper">

	<resultMap id="XxlJobLog" type="com.xxl.job.admin.core.model.XxlJobLog" >
		<result column="id" property="id" jdbcType="INTEGER" />

		<result column="job_group" property="jobGroup" jdbcType="VARCHAR" />
		<result column="job_id" property="jobId" jdbcType="INTEGER" />

		<result column="glue_type" property="glueType" jdbcType="VARCHAR" />

		<result column="executor_address" property="executorAddress"  jdbcType="VARCHAR" />
		<result column="executor_handler" property="executorHandler"  jdbcType="VARCHAR" />
		<result column="executor_param" property="executorParam"  jdbcType="VARCHAR" />

		<result column="trigger_time" property="triggerTime" jdbcType="TIMESTAMP"  />
		<result column="trigger_code" property="triggerCode" jdbcType="VARCHAR"  />
		<result column="trigger_msg" property="triggerMsg"  jdbcType="VARCHAR" />

		<result column="handle_time" property="handleTime"  jdbcType="TIMESTAMP" />
		<result column="handle_code" property="handleCode" jdbcType="VARCHAR"  />
		<result column="handle_msg" property="handleMsg" jdbcType="VARCHAR"  />

	</resultMap>

	<sql id="Base_Column_List">
		id,
		job_group,
		job_id,
		glue_type,
		executor_address,
		executor_handler,
		executor_param,
		trigger_time,
		trigger_code,
		trigger_msg,
		handle_time,
		handle_code,
		handle_msg
	</sql>

	<select id="pageList" parameterType="java.util.HashMap" resultMap="XxlJobLog">
		SELECT <include refid="Base_Column_List" />
		FROM XXL_TRIGGER_LOG
		<trim prefix="WHERE" prefixOverrides="AND | OR" >
			<if test="jobGroup != null and jobGroup != ''">
				AND job_group = #{jobGroup}
			</if>
			<if test="jobId gt 0">
				AND job_id = #{jobId}
			</if>
			<if test="triggerTimeStart != null">
				AND trigger_time <![CDATA[ >= ]]> #{triggerTimeStart}
			</if>
			<if test="triggerTimeEnd != null">
				AND trigger_time <![CDATA[ <= ]]> #{triggerTimeEnd}
			</if>
		</trim>
		ORDER BY id
	</select>

	<select id="pageListCount" parameterType="java.util.HashMap" resultType="int">
		SELECT count(1)
		FROM XXL_TRIGGER_LOG
		<trim prefix="WHERE" prefixOverrides="AND | OR" >
			<if test="jobGroup != null and jobGroup != ''">
				AND job_group = #{jobGroup}
			</if>
			<if test="jobId gt 0">
				AND job_id = #{jobId}
			</if>
			<if test="triggerTimeStart != null">
				AND trigger_time <![CDATA[ >= ]]> #{triggerTimeStart}
			</if>
			<if test="triggerTimeEnd != null">
				AND trigger_time <![CDATA[ <= ]]> #{triggerTimeEnd}
			</if>
		</trim>
	</select>

	<select id="load" parameterType="java.lang.Integer" resultMap="XxlJobLog">
		SELECT <include refid="Base_Column_List" />
		FROM XXL_TRIGGER_LOG
		WHERE id = #{id}
	</select>


	<insert id="save" parameterType="com.xxl.job.admin.core.model.XxlJobLog" useGeneratedKeys="true" keyProperty="id" >
		<selectKey resultType="java.lang.Integer" order="BEFORE" keyProperty="id">
			select TRIGGER_LOG_sequence.nextval  as id from dual
		</selectKey>
		INSERT INTO XXL_TRIGGER_LOG
		(id,
		job_group,
		job_id
		) VALUES
		(#{id,jdbcType=INTEGER},
		#{jobGroup,jdbcType=INTEGER},
		#{jobId,jdbcType=INTEGER}
		)

		<!--<selectKey resultType="java.lang.Integer" order="AFTER" keyProperty="id">-->
			<!--SELECT LAST_INSERT_ID()-->
		<!--</selectKey>-->
	</insert>

	<update id="updateTriggerInfo">
		UPDATE XXL_TRIGGER_LOG
		SET
		glue_type= #{glueType,jdbcType=VARCHAR},
		trigger_time= #{triggerTime,jdbcType=TIMESTAMP},
		trigger_code= #{triggerCode,jdbcType=VARCHAR},
		trigger_msg= #{triggerMsg,jdbcType=VARCHAR},
		executor_address= #{executorAddress,jdbcType=VARCHAR},
		executor_handler=#{executorHandler,jdbcType=VARCHAR},
		executor_param= #{executorParam,jdbcType=VARCHAR}
		WHERE id= #{id}
	</update>

	<update id="updateHandleInfo">
		UPDATE XXL_TRIGGER_LOG
		SET
		handle_time= #{handleTime},
		handle_code= #{handleCode},
		handle_msg= #{handleMsg}
		WHERE id= #{id}
	</update>

	<delete id="delete">
		delete from XXL_TRIGGER_LOG
		WHERE job_id = #{jobId}
	</delete>

	<select id="triggerCountByHandleCode" parameterType="java.lang.Integer" resultType="java.lang.Integer">
		SELECT count(1)
		FROM XXL_TRIGGER_LOG
		<trim prefix="WHERE" prefixOverrides="AND | OR" >
			<if test="_parameter gt 0">
				 handle_code = #{handleCode}
			</if>
		</trim>

	</select>

	<select id="triggerCountByDay" parameterType="java.util.Map" resultType="java.util.Map" >
		SELECT trigger_time as triggerDay, COUNT(id) as triggerCount
		FROM XXL_TRIGGER_LOG
		WHERE trigger_time <![CDATA[ >]]>  #{from} and trigger_time <![CDATA[ < ]]> #{to}
		<if test="handleCode gt 0">
			AND handle_code = #{handleCode}
		</if>
		GROUP BY trigger_time
	</select>

	<delete id="clearLog" parameterType="java.util.Map" >
		delete from XXL_TRIGGER_LOG
		<trim prefix="WHERE" prefixOverrides="AND | OR" >
			<if test="jobGroup gt 0">
				AND job_group = #{jobGroup}
			</if>
			<if test="jobId gt 0">
				AND job_id = #{jobId}
			</if>
			<if test="clearBeforeTime != null">
				AND trigger_time <![CDATA[ <= ]]> #{clearBeforeTime}
			</if>
			<if test="clearBeforeNum gt 0">
				AND id NOT in(
				SELECT id FROM(
				SELECT id FROM XXL_TRIGGER_LOG
				<trim prefix="WHERE" prefixOverrides="AND | OR" >
					<if test="jobGroup gt 0">
						AND job_group = #{jobGroup}
					</if>
					<if test="jobId gt 0">
						AND job_id = #{jobId}
					</if>
				</trim>
				ORDER BY trigger_time desc
				LIMIT 0, #{clearBeforeNum}
				) t1
				)
			</if>
		</trim>
	</delete>

</mapper>