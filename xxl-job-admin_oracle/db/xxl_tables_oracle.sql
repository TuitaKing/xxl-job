--
-- A hint submitted by a user: Oracle DB MUST be created as "shared" and the 
-- job_queue_processes parameter  must be greater than 2
-- However, these settings are pretty much standard after any
-- Oracle install, so most users need not worry about this.
--
-- Many other users (including the primary author of Quartz) have had success
-- runing in dedicated mode, so only consider the above as a hint ;-)
--

delete from xxl_fired_triggers;
delete from xxl_simple_triggers;
delete from xxl_simprop_triggers;
delete from xxl_cron_triggers;
delete from xxl_blob_triggers;
delete from xxl_triggers;
delete from xxl_job_details;
delete from xxl_calendars;
delete from xxl_paused_trigger_grps;
delete from xxl_locks;
delete from xxl_scheduler_state;

-- table xxl_calendars;
-- table xxl_fired_triggers;
-- table xxl_blob_triggers;
-- table xxl_cron_triggers;
-- table xxl_simple_triggers;
-- table xxl_simprop_triggers;
-- table xxl_triggers;
-- table xxl_job_details;
-- table xxl_paused_trigger_grps;
-- table xxl_locks;
-- table xxl_scheduler_state;


CREATE TABLE xxl_job_details
  (
    SCHED_NAME VARCHAR2(120) NOT NULL,
    JOB_NAME  VARCHAR2(200) NOT NULL,
    JOB_GROUP VARCHAR2(200) NOT NULL,
    DESCRIPTION VARCHAR2(250) NULL,
    JOB_CLASS_NAME   VARCHAR2(250) NOT NULL, 
    IS_DURABLE VARCHAR2(1) NOT NULL,
    IS_NONCONCURRENT VARCHAR2(1) NOT NULL,
    IS_UPDATE_DATA VARCHAR2(1) NOT NULL,
    REQUESTS_RECOVERY VARCHAR2(1) NOT NULL,
    JOB_DATA BLOB NULL,
    CONSTRAINT xxl_JOB_DETAILS_PK PRIMARY KEY (SCHED_NAME,JOB_NAME,JOB_GROUP)
);
CREATE TABLE xxl_triggers
  (
    SCHED_NAME VARCHAR2(120) NOT NULL,
    TRIGGER_NAME VARCHAR2(200) NOT NULL,
    TRIGGER_GROUP VARCHAR2(200) NOT NULL,
    JOB_NAME  VARCHAR2(200) NOT NULL, 
    JOB_GROUP VARCHAR2(200) NOT NULL,
    DESCRIPTION VARCHAR2(250) NULL,
    NEXT_FIRE_TIME NUMBER(13) NULL,
    PREV_FIRE_TIME NUMBER(13) NULL,
    PRIORITY NUMBER(13) NULL,
    TRIGGER_STATE VARCHAR2(16) NOT NULL,
    TRIGGER_TYPE VARCHAR2(8) NOT NULL,
    START_TIME NUMBER(13) NOT NULL,
    END_TIME NUMBER(13) NULL,
    CALENDAR_NAME VARCHAR2(200) NULL,
    MISFIRE_INSTR NUMBER(2) NULL,
    JOB_DATA BLOB NULL,
    CONSTRAINT xxl_TRIGGERS_PK PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),
    CONSTRAINT xxl_TRIGGER_TO_JOBS_FK FOREIGN KEY (SCHED_NAME,JOB_NAME,JOB_GROUP) 
      REFERENCES xxl_JOB_DETAILS(SCHED_NAME,JOB_NAME,JOB_GROUP) 
);
CREATE TABLE xxl_simple_triggers
  (
    SCHED_NAME VARCHAR2(120) NOT NULL,
    TRIGGER_NAME VARCHAR2(200) NOT NULL,
    TRIGGER_GROUP VARCHAR2(200) NOT NULL,
    REPEAT_COUNT NUMBER(7) NOT NULL,
    REPEAT_INTERVAL NUMBER(12) NOT NULL,
    TIMES_TRIGGERED NUMBER(10) NOT NULL,
    CONSTRAINT xxl_SIMPLE_TRIG_PK PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),
    CONSTRAINT xxl_SIMPLE_TRIG_TO_TRIG_FK FOREIGN KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP) 
	REFERENCES xxl_TRIGGERS(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)
);
CREATE TABLE xxl_cron_triggers
  (
    SCHED_NAME VARCHAR2(120) NOT NULL,
    TRIGGER_NAME VARCHAR2(200) NOT NULL,
    TRIGGER_GROUP VARCHAR2(200) NOT NULL,
    CRON_EXPRESSION VARCHAR2(120) NOT NULL,
    TIME_ZONE_ID VARCHAR2(80),
    CONSTRAINT xxl_CRON_TRIG_PK PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),
    CONSTRAINT xxl_CRON_TRIG_TO_TRIG_FK FOREIGN KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP) 
      REFERENCES xxl_TRIGGERS(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)
);
CREATE TABLE xxl_simprop_triggers
  (          
    SCHED_NAME VARCHAR2(120) NOT NULL,
    TRIGGER_NAME VARCHAR2(200) NOT NULL,
    TRIGGER_GROUP VARCHAR2(200) NOT NULL,
    STR_PROP_1 VARCHAR2(512) NULL,
    STR_PROP_2 VARCHAR2(512) NULL,
    STR_PROP_3 VARCHAR2(512) NULL,
    INT_PROP_1 NUMBER(10) NULL,
    INT_PROP_2 NUMBER(10) NULL,
    LONG_PROP_1 NUMBER(13) NULL,
    LONG_PROP_2 NUMBER(13) NULL,
    DEC_PROP_1 NUMERIC(13,4) NULL,
    DEC_PROP_2 NUMERIC(13,4) NULL,
    BOOL_PROP_1 VARCHAR2(1) NULL,
    BOOL_PROP_2 VARCHAR2(1) NULL,
    CONSTRAINT xxl_SIMPROP_TRIG_PK PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),
    CONSTRAINT xxl_SIMPROP_TRIG_TO_TRIG_FK FOREIGN KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP) 
      REFERENCES xxl_TRIGGERS(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)
);
CREATE TABLE xxl_blob_triggers
  (
    SCHED_NAME VARCHAR2(120) NOT NULL,
    TRIGGER_NAME VARCHAR2(200) NOT NULL,
    TRIGGER_GROUP VARCHAR2(200) NOT NULL,
    BLOB_DATA BLOB NULL,
    CONSTRAINT xxl_BLOB_TRIG_PK PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),
    CONSTRAINT xxl_BLOB_TRIG_TO_TRIG_FK FOREIGN KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP) 
        REFERENCES xxl_TRIGGERS(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)
);
CREATE TABLE xxl_calendars
  (
    SCHED_NAME VARCHAR2(120) NOT NULL,
    CALENDAR_NAME  VARCHAR2(200) NOT NULL, 
    CALENDAR BLOB NOT NULL,
    CONSTRAINT xxl_CALENDARS_PK PRIMARY KEY (SCHED_NAME,CALENDAR_NAME)
);
CREATE TABLE xxl_paused_trigger_grps
  (
    SCHED_NAME VARCHAR2(120) NOT NULL,
    TRIGGER_GROUP  VARCHAR2(200) NOT NULL, 
    CONSTRAINT xxl_PAUSED_TRIG_GRPS_PK PRIMARY KEY (SCHED_NAME,TRIGGER_GROUP)
);
CREATE TABLE xxl_fired_triggers 
  (
    SCHED_NAME VARCHAR2(120) NOT NULL,
    ENTRY_ID VARCHAR2(95) NOT NULL,
    TRIGGER_NAME VARCHAR2(200) NOT NULL,
    TRIGGER_GROUP VARCHAR2(200) NOT NULL,
    INSTANCE_NAME VARCHAR2(200) NOT NULL,
    FIRED_TIME NUMBER(13) NOT NULL,
    SCHED_TIME NUMBER(13) NOT NULL,
    PRIORITY NUMBER(13) NOT NULL,
    STATE VARCHAR2(16) NOT NULL,
    JOB_NAME VARCHAR2(200) NULL,
    JOB_GROUP VARCHAR2(200) NULL,
    IS_NONCONCURRENT VARCHAR2(1) NULL,
    REQUESTS_RECOVERY VARCHAR2(1) NULL,
    CONSTRAINT xxl_FIRED_TRIGGER_PK PRIMARY KEY (SCHED_NAME,ENTRY_ID)
);
CREATE TABLE xxl_scheduler_state 
  (
    SCHED_NAME VARCHAR2(120) NOT NULL,
    INSTANCE_NAME VARCHAR2(200) NOT NULL,
    LAST_CHECKIN_TIME NUMBER(13) NOT NULL,
    CHECKIN_INTERVAL NUMBER(13) NOT NULL,
    CONSTRAINT xxl_SCHEDULER_STATE_PK PRIMARY KEY (SCHED_NAME,INSTANCE_NAME)
);
CREATE TABLE xxl_locks
  (
    SCHED_NAME VARCHAR2(120) NOT NULL,
    LOCK_NAME  VARCHAR2(40) NOT NULL, 
    CONSTRAINT xxl_LOCKS_PK PRIMARY KEY (SCHED_NAME,LOCK_NAME)
);

create index idx_xxl_j_req_recovery on xxl_job_details(SCHED_NAME,REQUESTS_RECOVERY);
create index idx_xxl_j_grp on xxl_job_details(SCHED_NAME,JOB_GROUP);

create index idx_xxl_t_j on xxl_triggers(SCHED_NAME,JOB_NAME,JOB_GROUP);
create index idx_xxl_t_jg on xxl_triggers(SCHED_NAME,JOB_GROUP);
create index idx_xxl_t_c on xxl_triggers(SCHED_NAME,CALENDAR_NAME);
create index idx_xxl_t_g on xxl_triggers(SCHED_NAME,TRIGGER_GROUP);
create index idx_xxl_t_state on xxl_triggers(SCHED_NAME,TRIGGER_STATE);
create index idx_xxl_t_n_state on xxl_triggers(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP,TRIGGER_STATE);
create index idx_xxl_t_n_g_state on xxl_triggers(SCHED_NAME,TRIGGER_GROUP,TRIGGER_STATE);
create index idx_xxl_t_next_fire_time on xxl_triggers(SCHED_NAME,NEXT_FIRE_TIME);
create index idx_xxl_t_nft_st on xxl_triggers(SCHED_NAME,TRIGGER_STATE,NEXT_FIRE_TIME);
create index idx_xxl_t_nft_misfire on xxl_triggers(SCHED_NAME,MISFIRE_INSTR,NEXT_FIRE_TIME);
create index idx_xxl_t_nft_st_misfire on xxl_triggers(SCHED_NAME,MISFIRE_INSTR,NEXT_FIRE_TIME,TRIGGER_STATE);
create index idx_xxl_t_nft_st_misfire_grp on xxl_triggers(SCHED_NAME,MISFIRE_INSTR,NEXT_FIRE_TIME,TRIGGER_GROUP,TRIGGER_STATE);

create index idx_xxl_ft_trig_inst_name on xxl_fired_triggers(SCHED_NAME,INSTANCE_NAME);
create index idx_xxl_ft_inst_job_req_rcvry on xxl_fired_triggers(SCHED_NAME,INSTANCE_NAME,REQUESTS_RECOVERY);
create index idx_xxl_ft_j_g on xxl_fired_triggers(SCHED_NAME,JOB_NAME,JOB_GROUP);
create index idx_xxl_ft_jg on xxl_fired_triggers(SCHED_NAME,JOB_GROUP);
create index idx_xxl_ft_t_g on xxl_fired_triggers(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP);
create index idx_xxl_ft_tg on xxl_fired_triggers(SCHED_NAME,TRIGGER_GROUP);


-- TABLE XXL_TRIGGER_GROUP;
CREATE TABLE XXL_TRIGGER_GROUP (
ID int NOT NULL ,
APP_NAME VARCHAR2(64) NOT NULL ,
TITLE VARCHAR2(12) NOT NULL ,
"ORDER" NUMBER DEFAULT '0'  NULL ,
ADDRESS_TYPE NUMBER DEFAULT '0'  NULL ,
ADDRESS_LIST VARCHAR2(200) DEFAULT NULL  NULL 
);
ALTER TABLE XXL_TRIGGER_GROUP ADD CHECK (ID IS NOT NULL);
ALTER TABLE XXL_TRIGGER_GROUP ADD CHECK (APP_NAME IS NOT NULL);
ALTER TABLE XXL_TRIGGER_GROUP ADD CHECK (TITLE IS NOT NULL);
ALTER TABLE XXL_TRIGGER_GROUP ADD PRIMARY KEY (ID);
--grop的序列
CREATE SEQUENCE  TRIGGER_GROUP_SEQUENCE  MINVALUE 0 MAXVALUE  INCREMENT BY 1 START WITH 10 CACHE 10 NOORDER  NOCYCLE


-- TABLE XXL_TRIGGER_INFO;
CREATE TABLE XXL_TRIGGER_INFO (
ID NUMBER NOT NULL ,
JOB_GROUP NUMBER NOT NULL ,
JOB_CRON VARCHAR2(128) NOT NULL ,
JOB_DESC VARCHAR2(255) NOT NULL ,
ADD_TIME TIMESTAMP(6)  DEFAULT NULL  NULL ,
UPDATE_TIME TIMESTAMP(6)  DEFAULT NULL  NULL ,
AUTHOR VARCHAR2(64) DEFAULT NULL  NULL ,
ALARM_EMAIL VARCHAR2(255) DEFAULT NULL  NULL ,
EXECUTOR_ROUTE_STRATEGY VARCHAR2(50) DEFAULT NULL  NULL ,
EXECUTOR_HANDLER VARCHAR2(255) DEFAULT NULL  NULL ,
EXECUTOR_PARAM VARCHAR2(255) DEFAULT NULL  NULL ,
EXECUTOR_BLOCK_STRATEGY VARCHAR2(50) DEFAULT NULL  NULL ,
EXECUTOR_FAIL_STRATEGY VARCHAR2(50) DEFAULT NULL  NULL ,
GLUE_TYPE VARCHAR2(50) NOT NULL ,
GLUE_SOURCE CLOB NULL ,
GLUE_REMARK VARCHAR2(128) DEFAULT NULL  NULL ,
GLUE_UPDATETIME TIMESTAMP(6)  DEFAULT NULL  NULL ,
CHILD_JOBKEY VARCHAR2(255) DEFAULT NULL  NULL 
)
LOGGING
NOCOMPRESS
NOCACHE
;
ALTER TABLE XXL_TRIGGER_INFO ADD CHECK (ID IS NOT NULL);
ALTER TABLE XXL_TRIGGER_INFO ADD CHECK (JOB_GROUP IS NOT NULL);
ALTER TABLE XXL_TRIGGER_INFO ADD CHECK (JOB_CRON IS NOT NULL);
ALTER TABLE XXL_TRIGGER_INFO ADD CHECK (JOB_DESC IS NOT NULL);
ALTER TABLE XXL_TRIGGER_INFO ADD CHECK (GLUE_TYPE IS NOT NULL);

ALTER TABLE XXL_TRIGGER_INFO ADD PRIMARY KEY (ID);
--info的序列
CREATE SEQUENCE  TRIGGER_INFO_SEQUENCE MINVALUE 0 MAXVALUE  INCREMENT BY 1 START WITH 30 CACHE 10 NOORDER  NOCYCLE

-- ----------------------------
-- TABLE XXL_TRIGGER_LOG;
CREATE TABLE XXL_TRIGGER_LOG (
ID NUMBER NOT NULL ,
JOB_GROUP NUMBER NOT NULL ,
JOB_ID NUMBER NOT NULL ,
GLUE_TYPE VARCHAR2(50) DEFAULT NULL  NULL ,
EXECUTOR_ADDRESS VARCHAR2(255) DEFAULT NULL  NULL ,
EXECUTOR_HANDLER VARCHAR2(255) DEFAULT NULL  NULL ,
EXECUTOR_PARAM VARCHAR2(255) DEFAULT NULL  NULL ,
TRIGGER_TIME TIMESTAMP(6)  DEFAULT NULL  NULL ,
TRIGGER_CODE VARCHAR2(255) DEFAULT NULL  NULL ,
TRIGGER_MSG VARCHAR2(2048) DEFAULT NULL  NULL ,
HANDLE_TIME TIMESTAMP(6)  DEFAULT NULL  NULL ,
HANDLE_CODE VARCHAR2(255) DEFAULT NULL  NULL ,
HANDLE_MSG VARCHAR2(2048) DEFAULT NULL  NULL 
)
LOGGING
NOCOMPRESS
NOCACHE
;
ALTER TABLE XXL_TRIGGER_LOG ADD CHECK (ID IS NOT NULL);
ALTER TABLE XXL_TRIGGER_LOG ADD CHECK (JOB_GROUP IS NOT NULL);
ALTER TABLE XXL_TRIGGER_LOG ADD CHECK (JOB_ID IS NOT NULL);
ALTER TABLE XXL_TRIGGER_LOG ADD PRIMARY KEY (ID);
--log的序列
CREATE SEQUENCE  TRIGGER_LOG_SEQUENCE  MINVALUE 0 MAXVALUE  INCREMENT BY 1 START WITH 20 CACHE 10 NOORDER  NOCYCLE

-- TABLE XXL_TRIGGER_LOGGLUE;
CREATE TABLE XXL_TRIGGER_LOGGLUE (
ID NUMBER NOT NULL ,
JOB_ID NUMBER NOT NULL ,
GLUE_TYPE VARCHAR2(50) DEFAULT NULL  NULL ,
GLUE_SOURCE CLOB NULL ,
GLUE_REMARK VARCHAR2(128) NOT NULL ,
ADD_TIME TIMESTAMP(6)  NULL ,
UPDATE_TIME TIMESTAMP(6)  NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
ALTER TABLE XXL_TRIGGER_LOGGLUE ADD CHECK (ID IS NOT NULL);
ALTER TABLE XXL_TRIGGER_LOGGLUE ADD CHECK (JOB_ID IS NOT NULL);
ALTER TABLE XXL_TRIGGER_LOGGLUE ADD CHECK (GLUE_REMARK IS NOT NULL);
ALTER TABLE XXL_TRIGGER_LOGGLUE ADD PRIMARY KEY (ID);
--logglue的序列
CREATE SEQUENCE  TRIGGER_LOGGLUE_SEQUENCE  MINVALUE 0 MAXVALUE  INCREMENT BY 1 START WITH 10 CACHE 10 NOORDER  NOCYCLE

-- TABLE XXL_TRIGGER_REGISTRY;
CREATE TABLE XXL_TRIGGER_REGISTRY (
ID NUMBER NOT NULL ,
REGISTRY_GROUP VARCHAR2(255) NOT NULL ,
REGISTRY_KEY VARCHAR2(255) NOT NULL ,
REGISTRY_VALUE VARCHAR2(255) NOT NULL ,
UPDATE_TIME TIMESTAMP(6)  NOT NULL 
)
LOGGING
NOCOMPRESS
NOCACHE
;

ALTER TABLE XXL_TRIGGER_REGISTRY ADD CHECK (ID IS NOT NULL);
ALTER TABLE XXL_TRIGGER_REGISTRY ADD CHECK (REGISTRY_GROUP IS NOT NULL);
ALTER TABLE XXL_TRIGGER_REGISTRY ADD CHECK (REGISTRY_KEY IS NOT NULL);
ALTER TABLE XXL_TRIGGER_REGISTRY ADD CHECK (REGISTRY_VALUE IS NOT NULL);
ALTER TABLE XXL_TRIGGER_REGISTRY ADD CHECK (UPDATE_TIME IS NOT NULL);

ALTER TABLE XXL_TRIGGER_REGISTRY ADD PRIMARY KEY (ID);
CREATE SEQUENCE  TRIGGER_REGISTRY_SEQUENCE  MINVALUE 0 MAXVALUE  INCREMENT BY 1 START WITH 10 CACHE 10 NOORDER  NOCYCLE